apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: supabase/postgres:14.1.0.21
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: supabase-env
              key: POSTGRES_PASSWORD
        volumeMounts:
          - name: postgres-data
            mountPath: /var/lib/postgresql/data
          - name: init-scripts
            mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
        - name: init-scripts
          configMap:
            name: db-init-scripts
            items:
            - key: "00-initial-schema.sql"
              path: "00-initial-schema.sql"
            - key: "01-auth-schema.sql"
              path: "01-auth-schema.sql"
            - key: "02-storage-schema.sql"
              path: "02-storage-schema.sql"
            - key: "03-post-setup.sql"
              path: "03-post-setup.sql"
            - key: "04-pg-graphql.sql"
              path: "04-pg-graphql.sql"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
spec:
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: db
  ports:
  - port: 5432
    targetPort: 5432
